apply plugin: 'com.android.library'

android {
    compileSdkVersion compile_sdk
    buildToolsVersion build_tools

    defaultConfig {
        versionCode version_code
        versionName version_readable
        targetSdkVersion target_sdk
        minSdkVersion minimum_sdk

        resValue "string", "provider_accelerometer", applicationId + ".provider.accelerometer"
        resValue "string", "provider_applications", applicationId + ".provider.applications"
        resValue "string", "provider_aware", applicationId + ".provider.aware"
        resValue "string", "provider_barometer", applicationId + ".provider.barometer"
        resValue "string", "provider_battery", applicationId + ".provider.battery"
        resValue "string", "provider_bluetooth", applicationId + ".provider.bluetooth"
        resValue "string", "provider_communication", applicationId + ".provider.communication"
        resValue "string", "provider_esm", applicationId + ".provider.esm"
        resValue "string", "provider_gravity", applicationId + ".provider.gravity"
        resValue "string", "provider_gyroscope", applicationId + ".provider.gyroscope"
        resValue "string", "provider_installations", applicationId + ".provider.installations"
        resValue "string", "provider_keyboard", applicationId + ".provider.keyboard"
        resValue "string", "provider_light", applicationId + ".provider.light"
        resValue "string", "provider_linear_accelerometer", applicationId + ".provider.accelerometer.linear"
        resValue "string", "provider_locations", applicationId + ".provider.locations"
        resValue "string", "provider_magnetometer", applicationId + ".provider.magnetometer"
        resValue "string", "provider_network", applicationId + ".provider.network"
        resValue "string", "provider_processor", applicationId + ".provider.processor"
        resValue "string", "provider_proximity", applicationId + ".provider.proximity"
        resValue "string", "provider_rotation", applicationId + ".provider.rotation"
        resValue "string", "provider_screen", applicationId + ".provider.screen"
        resValue "string", "provider_significant", applicationId + ".provider.significant"
        resValue "string", "provider_telephony", applicationId + ".provider.telephony"
        resValue "string", "provider_temperature", applicationId + ".provider.temperature"
        resValue "string", "provider_timezones", applicationId + ".provider.timezone"
        resValue "string", "provider_traffic", applicationId + ".provider.traffic"
        resValue "string", "provider_wifi", applicationId + ".provider.wifi"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }
}

if (System.getenv("storeFile") != null && System.getenv("storePassword") != null && System.getenv("keyAlias") != null && System.getenv("keyPassword") != null) {
    android.signingConfigs.release.storeFile = file(System.getenv("storeFile"))
    android.signingConfigs.release.storePassword = System.getenv("storePassword")
    android.signingConfigs.release.keyAlias = System.getenv("keyAlias")
    android.signingConfigs.release.keyPassword = System.getenv("keyPassword")
} else {
    println("No keystore defined. Unsigned .apk!")
    android.buildTypes.release.signingConfig = null
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}

dependencies {
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$mqtt_libs"
    implementation "com.koushikdutta.ion:ion:$ion_libs"
    implementation "com.android.support:gridlayout-v7:$support_libs"
    implementation "com.android.support:appcompat-v7:$support_libs"
}

